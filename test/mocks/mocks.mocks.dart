// Mocks generated by Mockito 5.1.0 from annotations
// in wajve_coding_challenge/test/mocks/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wajve_coding_challenge/domain/model/page.dart' as _i2;
import 'package:wajve_coding_challenge/domain/model/user.dart' as _i3;
import 'package:wajve_coding_challenge/domain/repository/user_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDataPage_0<T> extends _i1.Fake implements _i2.DataPage<T> {}

class _FakeUser_1 extends _i1.Fake implements _i3.User {}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i4.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.DataPage<_i3.User>> getUsers(int? page) => (super.noSuchMethod(
          Invocation.method(#getUsers, [page]),
          returnValue:
              Future<_i2.DataPage<_i3.User>>.value(_FakeDataPage_0<_i3.User>()))
      as _i5.Future<_i2.DataPage<_i3.User>>);
  @override
  _i5.Future<_i3.User> getUserById(int? id) =>
      (super.noSuchMethod(Invocation.method(#getUserById, [id]),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
}
